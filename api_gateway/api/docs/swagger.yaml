basePath: /
definitions:
  models.Account:
    properties:
      balance:
        type: number
      created_at:
        type: string
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.AccountsResponse:
    properties:
      accounts:
        items:
          $ref: '#/definitions/models.Account'
        type: array
      count:
        type: integer
    type: object
  models.Budget:
    properties:
      amount:
        type: number
      category_id:
        type: string
      created_at:
        type: string
      end_time:
        type: string
      id:
        type: string
      period:
        type: string
      start_time:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.BudgetSummaryItem:
    properties:
      category_id:
        example: category1
        type: string
      end_time:
        example: "2024-01-31T23:59:59Z"
        type: string
      period:
        example: monthly
        type: string
      start_time:
        example: "2024-01-01T00:00:00Z"
        type: string
      total_amount:
        example: 1234.56
        type: number
    type: object
  models.BudgetsResponse:
    properties:
      budgets:
        items:
          $ref: '#/definitions/models.Budget'
        type: array
      count:
        type: integer
    type: object
  models.CategoriesResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      count:
        type: integer
    type: object
  models.Category:
    properties:
      _id:
        type: string
      created_at:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.CreateAccount:
    properties:
      balance:
        type: number
      currency:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  models.CreateBudget:
    properties:
      amount:
        type: number
      category_id:
        type: string
      end_time:
        type: string
      period:
        type: string
      start_time:
        type: string
      user_id:
        type: string
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  models.CreateGoal:
    properties:
      current_amount:
        type: number
      deadline:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
      type:
        type: string
      user_id:
        type: string
    type: object
  models.CreateTransaction:
    properties:
      account_id:
        description: Account ID as a string
        type: string
      amount:
        description: Amount as a float32
        type: number
      category_id:
        description: Category ID as a string
        type: string
      date:
        description: Date as a time.Time
        type: string
      description:
        description: Description as a string
        type: string
      type:
        description: Type (spending/income) as a string
        type: string
      user_id:
        description: User ID as a string
        type: string
    type: object
  models.GetUserBudgetResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/models.BudgetSummaryItem'
        type: array
    type: object
  models.GetUserMoneyResponse:
    properties:
      category_id:
        description: Category ID as a string
        type: string
      time:
        description: Time as a time.Time
        type: string
      total_amount:
        description: Total amount as a float32
        type: number
    type: object
  models.GetUserMoneysResponse:
    properties:
      moneys:
        description: List of user money responses
        items:
          $ref: '#/definitions/models.GetUserMoneyResponse'
        type: array
    type: object
  models.Goal:
    properties:
      _id:
        type: string
      created_at:
        type: string
      current_amount:
        type: number
      deadline:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.GoalsResponse:
    properties:
      count:
        type: integer
      goals:
        items:
          $ref: '#/definitions/models.Goal'
        type: array
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.Transaction:
    properties:
      account_id:
        description: Account ID as a string
        type: string
      amount:
        description: Amount as a float32
        type: number
      category_id:
        description: Category ID as a string
        type: string
      created_at:
        description: Created timestamp as a time.Time
        type: string
      date:
        description: Date as a time.Time
        type: string
      description:
        description: Description as a string
        type: string
      id:
        description: ObjectID for MongoDB
        type: string
      type:
        description: Type (spending/income) as a string
        type: string
      updated_at:
        description: Updated timestamp as a time.Time
        type: string
      user_id:
        description: User ID as a string
        type: string
    type: object
  models.TransactionsResponse:
    properties:
      count:
        description: Count of transactions
        type: integer
      transactions:
        description: List of transactions
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
    type: object
  models.UpdateAccount:
    properties:
      balance:
        type: number
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateBudget:
    properties:
      amount:
        type: number
      category_id:
        type: string
      end_time:
        type: string
      id:
        type: string
      period:
        type: string
      start_time:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateCategory:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateGoal:
    properties:
      current_amount:
        type: number
      deadline:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
      type:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateTransaction:
    properties:
      account_id:
        description: Account ID as a string
        type: string
      amount:
        description: Amount as a float32
        type: number
      category_id:
        description: Category ID as a string
        type: string
      date:
        description: Date as a time.Time
        type: string
      description:
        description: Description as a string
        type: string
      id:
        description: ObjectID for MongoDB
        type: string
      type:
        description: Type (spending/income) as a string
        type: string
      user_id:
        description: User ID as a string
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      image:
        type: string
      password_hash:
        type: string
      phone:
        type: string
      role:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Personal Finance Tracker API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Personal Finance Tracker API
  version: "1.0"
paths:
  /budget_service/v1/account:
    post:
      consumes:
      - application/json
      description: Create a new account
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.CreateAccount'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Create a new account
      tags:
      - account
  /budget_service/v1/account/{id}:
    delete:
      consumes:
      - application/json
      description: Delete account
      parameters:
      - description: account_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Delete account
      tags:
      - account
    get:
      consumes:
      - application/json
      description: Get account by id
      parameters:
      - description: account_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get account by id
      tags:
      - account
    put:
      consumes:
      - application/json
      description: Update account
      parameters:
      - description: account_id
        in: path
        name: id
        required: true
        type: string
      - description: account
        in: body
        name: account
        schema:
          $ref: '#/definitions/models.UpdateAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Update account
      tags:
      - account
  /budget_service/v1/accounts:
    get:
      consumes:
      - application/json
      description: Get all account
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get all account
      tags:
      - account
  /budget_service/v2/budget:
    post:
      consumes:
      - application/json
      description: Create a new budget
      parameters:
      - description: budget
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/models.CreateBudget'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Create a new budget
      tags:
      - budget
  /budget_service/v2/budget/{id}:
    delete:
      consumes:
      - application/json
      description: Delete budget
      parameters:
      - description: budget_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Delete budget
      tags:
      - budget
    get:
      consumes:
      - application/json
      description: Get budget by id
      parameters:
      - description: budget_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get budget by id
      tags:
      - budget
    put:
      consumes:
      - application/json
      description: Update budget
      parameters:
      - description: budget_id
        in: path
        name: id
        required: true
        type: string
      - description: budget
        in: body
        name: budget
        schema:
          $ref: '#/definitions/models.UpdateBudget'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Update budget
      tags:
      - budget
  /budget_service/v2/budget/summary:
    get:
      consumes:
      - application/json
      description: Get all budgets
      parameters:
      - description: user_id
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserBudgetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get all budgets
      tags:
      - budget
  /budget_service/v2/budgets:
    get:
      consumes:
      - application/json
      description: Get all budgets
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BudgetsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get all budgets
      tags:
      - budget
  /budget_service/v3/categories:
    get:
      consumes:
      - application/json
      description: Get all category
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get all category
      tags:
      - category
  /budget_service/v3/category:
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - category
  /budget_service/v3/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category
      parameters:
      - description: category_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Delete category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Get category by id
      parameters:
      - description: category_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get category by id
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Update category
      parameters:
      - description: category_id
        in: path
        name: id
        required: true
        type: string
      - description: category
        in: body
        name: category
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Update category
      tags:
      - category
  /budget_service/v4/goal:
    post:
      consumes:
      - application/json
      description: Create a new goal
      parameters:
      - description: goal
        in: body
        name: goal
        required: true
        schema:
          $ref: '#/definitions/models.CreateGoal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Goal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Create a new goal
      tags:
      - goal
  /budget_service/v4/goal/{id}:
    delete:
      consumes:
      - application/json
      description: Delete goal
      parameters:
      - description: goal_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Delete goal
      tags:
      - goal
    get:
      consumes:
      - application/json
      description: Get goal by id
      parameters:
      - description: goal_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Goal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get goal by id
      tags:
      - goal
    put:
      consumes:
      - application/json
      description: Update goal
      parameters:
      - description: goal_id
        in: path
        name: id
        required: true
        type: string
      - description: goal
        in: body
        name: goal
        schema:
          $ref: '#/definitions/models.UpdateGoal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Goal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Update goal
      tags:
      - goal
  /budget_service/v4/goals:
    get:
      consumes:
      - application/json
      description: Get all goal
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GoalsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get all goal
      tags:
      - goal
  /budget_service/v4/goals/report-progress:
    get:
      consumes:
      - application/json
      description: Get all goal
      parameters:
      - description: user_id
        in: query
        name: user_id
        type: string
      - description: start_time
        in: query
        name: start_time
        type: string
      - description: end_time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GoalsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get all goal
      tags:
      - goal
  /budget_service/v5/transaction:
    post:
      consumes:
      - application/json
      description: Create a new transaction
      parameters:
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.CreateTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Create a new transaction
      tags:
      - transaction
  /budget_service/v5/transaction/{id}:
    delete:
      consumes:
      - application/json
      description: Delete transaction
      parameters:
      - description: transaction_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete transaction
      tags:
      - transaction
    get:
      consumes:
      - application/json
      description: Get transaction by id
      parameters:
      - description: transaction_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get transaction by id
      tags:
      - transaction
    put:
      consumes:
      - application/json
      description: Update transaction
      parameters:
      - description: transaction_id
        in: path
        name: id
        required: true
        type: string
      - description: transaction
        in: body
        name: transaction
        schema:
          $ref: '#/definitions/models.UpdateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update transaction
      tags:
      - transaction
  /budget_service/v5/transactions:
    get:
      consumes:
      - application/json
      description: Get all transaction
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransactionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all transaction
      tags:
      - transaction
  /budget_service/v5/transactions/income:
    get:
      consumes:
      - application/json
      description: Get all transaction
      parameters:
      - description: user_id
        in: query
        name: user_id
        type: string
      - description: start_time
        in: query
        name: start_time
        type: string
      - description: end_time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserMoneysResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all transaction
      tags:
      - transaction
  /budget_service/v5/transactions/spend:
    get:
      consumes:
      - application/json
      description: Get all transaction
      parameters:
      - description: user_id
        in: query
        name: user_id
        type: string
      - description: start_time
        in: query
        name: start_time
        type: string
      - description: end_time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserMoneysResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all transaction
      tags:
      - transaction
  /user_service/v6/user/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Get user by id
      tags:
      - user
  /user_service/v6/user/update/{id}:
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
